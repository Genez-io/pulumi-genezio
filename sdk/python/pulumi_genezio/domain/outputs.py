# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'AuthenticationProviders',
    'EnvironmentVariable',
    'GoogleProvider',
    'Project',
]

@pulumi.output_type
class AuthenticationProviders(dict):
    def __init__(__self__, *,
                 email: Optional[bool] = None,
                 google: Optional['outputs.GoogleProvider'] = None,
                 web3: Optional[bool] = None):
        if email is not None:
            pulumi.set(__self__, "email", email)
        if google is not None:
            pulumi.set(__self__, "google", google)
        if web3 is not None:
            pulumi.set(__self__, "web3", web3)

    @property
    @pulumi.getter
    def email(self) -> Optional[bool]:
        return pulumi.get(self, "email")

    @property
    @pulumi.getter
    def google(self) -> Optional['outputs.GoogleProvider']:
        return pulumi.get(self, "google")

    @property
    @pulumi.getter
    def web3(self) -> Optional[bool]:
        return pulumi.get(self, "web3")


@pulumi.output_type
class EnvironmentVariable(dict):
    def __init__(__self__, *,
                 name: str,
                 value: str):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def value(self) -> str:
        return pulumi.get(self, "value")


@pulumi.output_type
class GoogleProvider(dict):
    def __init__(__self__, *,
                 id: str,
                 secret: str):
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "secret", secret)

    @property
    @pulumi.getter
    def id(self) -> str:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def secret(self) -> str:
        return pulumi.get(self, "secret")


@pulumi.output_type
class Project(dict):
    def __init__(__self__, *,
                 name: str,
                 region: str):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "region", region)

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def region(self) -> str:
        return pulumi.get(self, "region")


