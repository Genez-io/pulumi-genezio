# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'AuthenticationProvidersArgs',
    'EnvironmentVariableArgs',
    'GoogleProviderArgs',
    'ProjectArgs',
]

@pulumi.input_type
class AuthenticationProvidersArgs:
    def __init__(__self__, *,
                 email: Optional[pulumi.Input[bool]] = None,
                 google: Optional[pulumi.Input['GoogleProviderArgs']] = None,
                 web3: Optional[pulumi.Input[bool]] = None):
        if email is not None:
            pulumi.set(__self__, "email", email)
        if google is not None:
            pulumi.set(__self__, "google", google)
        if web3 is not None:
            pulumi.set(__self__, "web3", web3)

    @property
    @pulumi.getter
    def email(self) -> Optional[pulumi.Input[bool]]:
        return pulumi.get(self, "email")

    @email.setter
    def email(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "email", value)

    @property
    @pulumi.getter
    def google(self) -> Optional[pulumi.Input['GoogleProviderArgs']]:
        return pulumi.get(self, "google")

    @google.setter
    def google(self, value: Optional[pulumi.Input['GoogleProviderArgs']]):
        pulumi.set(self, "google", value)

    @property
    @pulumi.getter
    def web3(self) -> Optional[pulumi.Input[bool]]:
        return pulumi.get(self, "web3")

    @web3.setter
    def web3(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "web3", value)


@pulumi.input_type
class EnvironmentVariableArgs:
    def __init__(__self__, *,
                 name: pulumi.Input[str],
                 value: pulumi.Input[str]):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter
    def name(self) -> pulumi.Input[str]:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: pulumi.Input[str]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class GoogleProviderArgs:
    def __init__(__self__, *,
                 id: pulumi.Input[str],
                 secret: pulumi.Input[str]):
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "secret", secret)

    @property
    @pulumi.getter
    def id(self) -> pulumi.Input[str]:
        return pulumi.get(self, "id")

    @id.setter
    def id(self, value: pulumi.Input[str]):
        pulumi.set(self, "id", value)

    @property
    @pulumi.getter
    def secret(self) -> pulumi.Input[str]:
        return pulumi.get(self, "secret")

    @secret.setter
    def secret(self, value: pulumi.Input[str]):
        pulumi.set(self, "secret", value)


@pulumi.input_type
class ProjectArgs:
    def __init__(__self__, *,
                 name: pulumi.Input[str],
                 region: pulumi.Input[str]):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "region", region)

    @property
    @pulumi.getter
    def name(self) -> pulumi.Input[str]:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: pulumi.Input[str]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def region(self) -> pulumi.Input[str]:
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: pulumi.Input[str]):
        pulumi.set(self, "region", value)


