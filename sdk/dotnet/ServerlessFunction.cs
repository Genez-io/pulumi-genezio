// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Genezio
{
    [GenezioResourceType("genezio:index:ServerlessFunction")]
    public partial class ServerlessFunction : global::Pulumi.CustomResource
    {
        [Output("authToken")]
        public Output<string> AuthToken { get; private set; } = null!;

        [Output("entry")]
        public Output<string> Entry { get; private set; } = null!;

        [Output("environmentVariables")]
        public Output<ImmutableDictionary<string, string>?> EnvironmentVariables { get; private set; } = null!;

        [Output("folderHash")]
        public Output<string?> FolderHash { get; private set; } = null!;

        [Output("functionId")]
        public Output<string> FunctionId { get; private set; } = null!;

        [Output("handler")]
        public Output<string> Handler { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("path")]
        public Output<string> Path { get; private set; } = null!;

        [Output("projectEnvId")]
        public Output<string> ProjectEnvId { get; private set; } = null!;

        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        [Output("projectName")]
        public Output<string> ProjectName { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("url")]
        public Output<string> Url { get; private set; } = null!;


        /// <summary>
        /// Create a ServerlessFunction resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServerlessFunction(string name, ServerlessFunctionArgs args, CustomResourceOptions? options = null)
            : base("genezio:index:ServerlessFunction", name, args ?? new ServerlessFunctionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServerlessFunction(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("genezio:index:ServerlessFunction", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServerlessFunction resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServerlessFunction Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ServerlessFunction(name, id, options);
        }
    }

    public sealed class ServerlessFunctionArgs : global::Pulumi.ResourceArgs
    {
        [Input("authToken", required: true)]
        public Input<string> AuthToken { get; set; } = null!;

        [Input("entry", required: true)]
        public Input<string> Entry { get; set; } = null!;

        [Input("environmentVariables")]
        private InputMap<string>? _environmentVariables;
        public InputMap<string> EnvironmentVariables
        {
            get => _environmentVariables ?? (_environmentVariables = new InputMap<string>());
            set => _environmentVariables = value;
        }

        [Input("folderHash")]
        public Input<string>? FolderHash { get; set; }

        [Input("handler", required: true)]
        public Input<string> Handler { get; set; } = null!;

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("path", required: true)]
        public Input<string> Path { get; set; } = null!;

        [Input("projectName", required: true)]
        public Input<string> ProjectName { get; set; } = null!;

        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        public ServerlessFunctionArgs()
        {
        }
        public static new ServerlessFunctionArgs Empty => new ServerlessFunctionArgs();
    }
}
