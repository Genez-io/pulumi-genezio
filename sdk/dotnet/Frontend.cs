// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Genezio
{
    /// <summary>
    /// A project resource that will be deployed on the Genezio platform.The project resource is used to group resources together and manage them as a single unit.
    /// 
    /// The project resource will deploy an empty project on the Genezio platform.
    /// 
    /// It is recommended to create a Project Resource as the first step in your deployment workflow. The output from this resource can then be utilized to provision and configure other resources within the project, ensuring they are properly associated and managed under a unified project.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ### Environment Variables
    /// 
    /// ## Pulumi Output Reference
    /// 
    /// Once the project is created, the `projectId` and `projectUrl` are available as outputs.
    /// </summary>
    [GenezioResourceType("genezio:index:Frontend")]
    public partial class Frontend : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The commands to run before deploying the frontend.
        /// </summary>
        [Output("buildCommands")]
        public Output<ImmutableArray<string>> BuildCommands { get; private set; } = null!;

        /// <summary>
        /// The environment variables that will be set for the frontend.
        /// </summary>
        [Output("environment")]
        public Output<ImmutableArray<Pulumi.Genezio.Domain.Outputs.EnvironmentVariable>> Environment { get; private set; } = null!;

        /// <summary>
        /// The path to the frontend files.
        /// </summary>
        [Output("path")]
        public Output<Archive> Path { get; private set; } = null!;

        /// <summary>
        /// The project to which the frontend will be deployed.
        /// </summary>
        [Output("project")]
        public Output<Pulumi.Genezio.Domain.Outputs.Project> Project { get; private set; } = null!;

        /// <summary>
        /// The folder in the path that contains the files to be published.
        /// </summary>
        [Output("publish")]
        public Output<string> Publish { get; private set; } = null!;

        /// <summary>
        /// The subdomain of the frontend.
        /// </summary>
        [Output("subdomain")]
        public Output<string?> Subdomain { get; private set; } = null!;

        /// <summary>
        /// The URL of the frontend.
        /// </summary>
        [Output("url")]
        public Output<string> Url { get; private set; } = null!;


        /// <summary>
        /// Create a Frontend resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Frontend(string name, FrontendArgs args, CustomResourceOptions? options = null)
            : base("genezio:index:Frontend", name, args ?? new FrontendArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Frontend(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("genezio:index:Frontend", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Frontend resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Frontend Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Frontend(name, id, options);
        }
    }

    public sealed class FrontendArgs : global::Pulumi.ResourceArgs
    {
        [Input("buildCommands")]
        private InputList<string>? _buildCommands;

        /// <summary>
        /// The commands to run before deploying the frontend.
        /// </summary>
        public InputList<string> BuildCommands
        {
            get => _buildCommands ?? (_buildCommands = new InputList<string>());
            set => _buildCommands = value;
        }

        [Input("environment")]
        private InputList<Pulumi.Genezio.Domain.Inputs.EnvironmentVariableArgs>? _environment;

        /// <summary>
        /// The environment variables that will be set for the frontend.
        /// </summary>
        public InputList<Pulumi.Genezio.Domain.Inputs.EnvironmentVariableArgs> Environment
        {
            get => _environment ?? (_environment = new InputList<Pulumi.Genezio.Domain.Inputs.EnvironmentVariableArgs>());
            set => _environment = value;
        }

        /// <summary>
        /// The path to the frontend files.
        /// </summary>
        [Input("path", required: true)]
        public Input<Archive> Path { get; set; } = null!;

        /// <summary>
        /// The project to which the frontend will be deployed.
        /// </summary>
        [Input("project", required: true)]
        public Input<Pulumi.Genezio.Domain.Inputs.ProjectArgs> Project { get; set; } = null!;

        /// <summary>
        /// The folder in the path that contains the files to be published.
        /// </summary>
        [Input("publish", required: true)]
        public Input<string> Publish { get; set; } = null!;

        /// <summary>
        /// The subdomain of the frontend.
        /// </summary>
        [Input("subdomain")]
        public Input<string>? Subdomain { get; set; }

        public FrontendArgs()
        {
        }
        public static new FrontendArgs Empty => new FrontendArgs();
    }
}
